library(psych)



library(data.table)
mydata <- fread('http://www.stats.ox.ac.uk/pub/datasets/csb/ch11b.dat')
head(mydata)
mydata[!complete.cases(mydata),]

install.packages("dplyr")
library("dplyr")
mydata = select(mydata, V1, V3, V4)

#Remove duplicate rows based on all columns:
distinct(mydata)

# Remove duplicated rows based on a column
distinct(mydata, V5)

str(mydata)
summary(mydata)
describe(mydata)
dim(mydata)

# 3-Way Frequency Table
mytable <- xtabs(~A+B+c, data=mydata)
ftable(mytable) # print table 
summary(mytable) # chi-square test of indepedence

#table( ) can also generate multidimensional tables based on 3 or more categorical variables. In this case, use the ftable( ) function to print the results more attractively.
# 3-Way Frequency Table 
mytable <- table(A, B, C) 
ftable(mytable)

Table ignores missing values. To include NA as a category in counts, include the table option exclude=NULL if the variable is a vector. If the variable is a factor you have to create a new factor using newfactor <- factor(oldfactor, exclude=NULL).


#You tend to use the covariance matrix when the variable scales are similar and the correlation matrix when variables are on different scales.


MATRIX DE CORRELAÇÃO
A correlação nunca pode ser maior do que 1 ou menor do que menos 1. Uma correlação próxima a zero indica que as duas variáveis não estão relacionadas. Uma correlação positiva indica que as duas variáveis movem juntas, e a relação é forte quanto mais a correlação se aproxima de um. Uma correlação negativa indica que as duas variáveis movem-se em direções opostas, e que a relação também fica mais forte quanto mais próxima de menos 1 a correlção ficar. Duas variáveis que estão perfeitamente correlacionadas positivamente (r=1) movem-se essencialmente em perfeita proporção na mesma direção, enquanto dois conjuntos que estão perfeitamente correlacionados negativamente movem-se em perfeita proporção em direções opostas.


library(Hmisc)
rcorr(as.matrix(mydata))

MATRIX DE COVARIAÇÃO
install.packages("corpcor")
install.packages("tseries")
library(corpcor)
library(tseries)

cov.shrink(mydata)

 Analysis of Covariance also called as ANCOVA
# Get the dataset.
input <- mydata

# Create the regression model.
result <- aov(V4~V3+V1,data = input)
print(summary(result))

# Get the dataset.
input <- mtcars

# Create the regression models.
result1 <- aov(V4~V3*V1,data = input)
result2 <- aov(V4~V3+V1,data = input)

# Compare the two models.
print(anova(result1,result2))



The principal( ) function in the psych package can be used to extract and rotate principal components.

# Varimax Rotated Principal Components
# retaining 5 components 
library(psych)
fit <- principal(mydata, nfactors=5, rotate="varimax")
fit # print results

The factor.pa( ) function in the psych package offers a number of factor analysis related functions, including principal axis factoring.

# Principal Axis Factor Analysis
library(psych)
fit <- factor.pa(mydata, nfactors=3, rotation="varimax")
fit # print results

mydata can be a raw data matrix or a covariance matrix. Pairwise deletion of missing data is used. Rotation can be "varimax" or "promax".
